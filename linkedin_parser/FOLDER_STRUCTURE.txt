╔══════════════════════════════════════════════════════════════╗
║     LINKEDIN PARSER - ORGANIZED FOLDER STRUCTURE            ║
╚══════════════════════════════════════════════════════════════╝

📁 linkedin_parser/
│
├── 📄 parse_and_append.py          ← Main parser script (RUN THIS)
│   └── Parses HTML and saves to CSV with ISO timestamps
│
├── 📄 html_input.txt                ← YOUR HTML GOES HERE
│   └── Paste LinkedIn table HTML here
│
├── 📄 QUICK_GUIDE.md                ← START HERE (3-step guide)
│   └── Visual guide: How to copy HTML from LinkedIn
│
├── 📄 README.md                     ← Full documentation
│   └── Complete reference with all features
│
└── 📄 linkedin_posts_combined.csv   ← OUTPUT (auto-created)
    └── Your extracted data appears here


╔══════════════════════════════════════════════════════════════╗
║     HOW TO USE (SIMPLE)                                      ║
╚══════════════════════════════════════════════════════════════╝

1️⃣  Read: QUICK_GUIDE.md
    ↓
2️⃣  Copy HTML from LinkedIn (F12 → Copy <table> element)
    ↓
3️⃣  Paste into: html_input.txt
    ↓
4️⃣  Run: python parse_and_append.py
    ↓
5️⃣  Get: linkedin_posts_combined.csv ✅


╔══════════════════════════════════════════════════════════════╗
║     WHAT WAS REMOVED (OLD FILES)                            ║
╚══════════════════════════════════════════════════════════════╝

🗑️  Deleted from main directory:
    - parse_table.py                (old version)
    - convert_timestamps.py         (integrated into main script)
    - table_input.html              (renamed to html_input.txt)
    - extracted_linkedin_data.csv   (old output)
    - extracted_linkedin_data_iso.csv (old output)
    - linkedin_posts_combined.csv   (moved to parser folder)

✅  Everything now in one clean folder!


╔══════════════════════════════════════════════════════════════╗
║     KEY FEATURES                                             ║
╚══════════════════════════════════════════════════════════════╝

✅ Automatic timestamp conversion (to ISO format)
✅ Append mode (process multiple pages → one CSV)
✅ All 17 columns preserved
✅ Handles multiline content
✅ Progress tracking
✅ Clean, organized code


╔══════════════════════════════════════════════════════════════╗
║     BEST WAY TO PROVIDE HTML INPUT                          ║
╚══════════════════════════════════════════════════════════════╝

📌 METHOD 1: Copy from Browser (RECOMMENDED)
   1. Open LinkedIn page
   2. Press F12
   3. Click "Select Element" tool
   4. Click on posts table
   5. Find <table> tag in Elements panel
   6. Right-click → Copy → Copy element
   7. Paste into html_input.txt

📌 METHOD 2: Save Page Source
   1. Right-click page → "Save As"
   2. Save as "Webpage, HTML Only"
   3. Open in text editor
   4. Find and copy <table> section
   5. Paste into html_input.txt

❌ AVOID:
   - Copying visible text only
   - Taking screenshots
   - Copying partial HTML


╔══════════════════════════════════════════════════════════════╗
║     EXAMPLE WORKFLOW (4 PAGES = 40 ROWS)                    ║
╚══════════════════════════════════════════════════════════════╝

Page 1: Copy HTML → Paste → Run script → Total: 10 rows
Page 2: Copy HTML → Paste → Run script → Total: 20 rows  
Page 3: Copy HTML → Paste → Run script → Total: 30 rows
Page 4: Copy HTML → Paste → Run script → Total: 40 rows

Final result: One CSV with 40 rows! 🎉


╔══════════════════════════════════════════════════════════════╗
║     SUPPORT                                                  ║
╚══════════════════════════════════════════════════════════════╝

📖 Quick start: QUICK_GUIDE.md
📖 Full docs: README.md
🐛 Issues: Check troubleshooting section in README.md

